{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin Delvo\\\\Desktop\\\\nextJsPractice\\\\components\\\\Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nconst Prices = ({\n  bpi\n}) => {\n  const {\n    0: currency,\n    1: setCurrency\n  } = useState('USD');\n\n  const handleChange = e => {\n    e.preventDefault();\n    setCurrency(e.target.value);\n  };\n\n  const renderList = currency => {\n    let list = '';\n\n    if (currency === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Bitcoin rate for \", bpi.USD.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, bpi.USD.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, bpi.USD.rate));\n    } else if (currency === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Bitcoin rate for \", bpi.GBP.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, bpi.GBP.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, bpi.GBP.rate));\n    } else if (currency === \"EUR\") {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Bitcoin rate for \", bpi.EUR.description, \":\", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, bpi.EUR.code), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, bpi.EUR.rate));\n    }\n\n    return list;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, renderList(currency)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    className: \"form-control\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"EUR\")));\n};\n\nexport default Prices;","map":{"version":3,"sources":["C:\\Users\\Kevin Delvo\\Desktop\\nextJsPractice\\components\\Prices.js"],"names":["useState","useEffect","Prices","bpi","currency","setCurrency","handleChange","e","preventDefault","target","value","renderList","list","USD","description","code","rate","GBP","EUR"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACxB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAIP,QAAD,IAAc;AAC7B,QAAIQ,IAAI,GAAG,EAAX;;AACA,QAAIR,QAAQ,KAAK,KAAjB,EAAwB;AACpBQ,MAAAA,IAAI,GACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsBT,GAAG,CAACU,GAAJ,CAAQC,WAD9B,OAEI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCX,GAAG,CAACU,GAAJ,CAAQE,IAA/C,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASZ,GAAG,CAACU,GAAJ,CAAQG,IAAjB,CAHJ,CADJ;AAOH,KARD,MAQO,IAAIZ,QAAQ,KAAK,KAAjB,EAAwB;AAC3BQ,MAAAA,IAAI,GACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsBT,GAAG,CAACc,GAAJ,CAAQH,WAD9B,OAEI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCX,GAAG,CAACc,GAAJ,CAAQF,IAA/C,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASZ,GAAG,CAACc,GAAJ,CAAQD,IAAjB,CAHJ,CADJ;AAOH,KARM,MAQA,IAAIZ,QAAQ,KAAK,KAAjB,EAAwB;AAC3BQ,MAAAA,IAAI,GACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsBT,GAAG,CAACe,GAAJ,CAAQJ,WAD9B,OAEI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCX,GAAG,CAACe,GAAJ,CAAQH,IAA/C,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASZ,GAAG,CAACe,GAAJ,CAAQF,IAAjB,CAHJ,CADJ;AAOH;;AACD,WAAOJ,IAAP;AACH,GA5BD;;AA8BA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,CAACP,QAAD,CADf,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,QAAQ,EAAEE,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CALJ,CADJ;AAaH,CAnDD;;AAoDA,eAAeJ,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst Prices = ({ bpi }) => {\r\n    const [currency, setCurrency] = useState('USD')\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setCurrency(e.target.value);\r\n    }\r\n\r\n    const renderList = (currency) => {\r\n        let list = '';\r\n        if (currency === 'USD') {\r\n            list = (\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin rate for {bpi.USD.description}:\r\n                    <span className=\"badge badge-primary\">{bpi.USD.code}</span>\r\n                    <strong>{bpi.USD.rate}</strong>\r\n                </li>\r\n            )\r\n        } else if (currency === 'GBP') {\r\n            list = (\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin rate for {bpi.GBP.description}:\r\n                    <span className=\"badge badge-primary\">{bpi.GBP.code}</span>\r\n                    <strong>{bpi.GBP.rate}</strong>\r\n                </li>\r\n            )\r\n        } else if (currency === \"EUR\") {\r\n            list = (\r\n                <li className=\"list-group-item\">\r\n                    Bitcoin rate for {bpi.EUR.description}:\r\n                    <span className=\"badge badge-primary\">{bpi.EUR.code}</span>\r\n                    <strong>{bpi.EUR.rate}</strong>\r\n                </li>\r\n            )\r\n        }\r\n        return list;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"list-group\">\r\n                {renderList(currency)}\r\n            </ul>\r\n            <br />\r\n            <select className=\"form-control\" onChange={handleChange}>\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"GBP\">GBP</option>\r\n                <option value=\"EUR\">EUR</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\nexport default Prices;"]},"metadata":{},"sourceType":"module"}